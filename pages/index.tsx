/* eslint-disable jsx-a11y/alt-text */
/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from 'react'
import 'react-responsive-carousel/lib/styles/carousel.min.css' // requires a loader
import { Carousel } from 'react-responsive-carousel'
import Countdown from 'react-countdown'
import ProductCard from '@/components/ProductCard'
import LazMall from '@/components/LazMall'
import { FlashSaleProductModel } from '@/models/flashSaleProduct.model'
import { ModCardModel } from '@/models/modCard.model'
import { LazMallModel } from '@/models/lazMall.model'
import { ProductCategoryModel } from '@/models/productCategory.model'
import ProductCategory from '@/components/ProductCategory'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [isShowAH, setShowAH] = useState(true)
  const [topActionLinks, setTopActionLinks] = useState([])
  const [sliderImageId, setSliderImageId] = useState([])
  const [modCards, setModCards] = useState([])
  const [dateTimer, setDateTimer] = useState(Date.now() + 40000000)
  const [flashSaleProducts, setFlashSaleProducts] = useState([])
  const [lazMalls, setLazMall] = useState([])
  const [productCategories, setProductCategories] = useState([])

  const renderer = ({
    hours,
    minutes,
    seconds,
    completed,
  }: {
    hours: number
    minutes: number
    seconds: number
    completed: boolean
  }) => {
    if (completed) {
      setDateTimer(Date.now() + 5000)
    } else {
      return (
        <span>
          {hours}:{minutes}:{seconds}
        </span>
      )
    }
  }

  let getContants = async () => {
    try {
      let res = await fetch('/assets/json/contants.json')
      let data = await res.json()
      setTopActionLinks(data.topActionLinks)
      setSliderImageId(data.sliderImageId)
    } catch (error) {
      console.log(error)
    }
  }

  let getFlashSaleProducts = async () => {
    try {
      let res = await fetch('/assets/json/flashSaleProducts.json')
      let data = await res.json()
      setFlashSaleProducts(data)
    } catch (error) {
      console.log(error)
    }
  }

  let getModCard = async () => {
    try {
      let res = await fetch('/assets/json/modCards.json')
      let data = await res.json()
      setModCards(data)
    } catch (error) {
      console.log(error)
    }
  }

  let getLazMall = async () => {
    try {
      let res = await fetch('/assets/json/lazMalls.json')
      let data = await res.json()
      setLazMall(data)
    } catch (error) {
      console.log(error)
    }
  }

  let getProductCategories = async () => {
    try {
      let res = await fetch('/assets/json/productCategories.json')
      let data = await res.json()
      setProductCategories(data)
    } catch (error) {
      console.log(error)
    }
  }

  useEffect(() => {
    ;(async () => {
      await getFlashSaleProducts()
      await getModCard()
      await getContants()
      await getLazMall()
      await getProductCategories()
    })()
  }, [])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="relative flex flex-col justify-center content-center w-screen">
          <div className="w-screen">
            {isShowAH === true && (
              <>
                <div className="relative w-screen h-[80px] bg-tet">
                  <img
                    className="object-contain w-screen h-[80px]"
                    src="/assets/img/qc-head.png"
                    alt=""
                  />
                </div>
                <button
                  className="font-bold text-2xl text-white absolute right-10 top-2 z-10"
                  onClick={() => {
                    setShowAH(false)
                  }}
                >
                  X
                </button>
              </>
            )}
          </div>

          <div className="relative flex flex-row justify-evenly bg-slate-50 p-1">
            {topActionLinks.map((item, ind) => (
              <a href="" key={ind} className="cursor-pointer text-xs">
                {item}
              </a>
            ))}
          </div>

          <div className="relative bg-white h-20 flex flex-row content-end justify-around">
            <img
              className="object-contain w-[10vw] h-auto"
              src="/assets/img/logo-lazada.png"
              alt=""
            />
            <div className="w-[40vw] h-10 bg-slate-200 flex content-center justify-start self-center">
              <input
                className="bg-slate-200 p-4 text-base w-[40vw] "
                type="text"
                placeholder="Tìm kiếm trên Lazada"
              />
              <button className=" bg-orange-500 ml-[auto]">
                <img className={styles.searchBtn} src="/assets/icon/icon-search.svg" alt="" />
              </button>
            </div>
            <button>
              <img className="h-8" src="/assets/icon/icon-cart.svg" alt="" />
            </button>
            <img className="object-contain w-[12vw] h-auto" src="/assets/img/zalopay.png" alt="" />
          </div>

          <div className="ralative w-screen h-[344px] bg-tet justify-center content-center">
            <Carousel
              autoPlay={true}
              infiniteLoop={true}
              showArrows={false}
              showStatus={false}
              showIndicators={true}
              showThumbs={false}
            >
              {sliderImageId.map((imgId) => (
                <div key={imgId}>
                  <img
                    className="object-contain h-[344px] w-[90px]"
                    src={`assets/img/slide-show-${imgId}.jpg`}
                  />
                </div>
              ))}
            </Carousel>
          </div>

          <div className="relative bg-slate-100 w-screen flex flex-col">
            <div className="relative w-[1200px] py-4 content-center justify-between flex flex-row self-center">
              {modCards.map((modcard: ModCardModel) => (
                <div
                  className=" h-[40px] w-[16vw] bg-white flex flex-row flex-wrap content-center justify-start rounded-2xl"
                  key={modcard.id}
                >
                  <img
                    className=" object-contain w-[32px] h-[32px] self-center"
                    src={`/assets/img/mod-cart-${modcard.img}.png`}
                    alt=""
                  />
                  <p className="px-2 text-[21px] self-center">{modcard.title}</p>
                </div>
              ))}
            </div>

            <div className=" relative flex flex-row justify-center content-end w-screen min-w-[1200px] h-fit bg-[url(//icms-image.slatic.net/images/ims-web/0fe02511-83d8-4ac8-a3f6-7f1cb8177e84.gif)]">
              <div className=" relative w-[1200px] mt-[200px] flex flex-col self-center pb-10">
                <h1 className=" relative text-2xl py-3">Deal Chớp Nhoáng</h1>
                <div className=" relative bg-white h-[60px] px-4 flex flex-row content-center">
                  <p className=" text-red-500 self-center">Đang bán</p>
                  <p className=" self-center mx-10">Kết thúc trong</p>
                  <Countdown
                    className=" self-center timer"
                    date={dateTimer}
                    renderer={renderer}
                    overtime={true}
                  />
                  <button className="ml-[auto] mx-[1px] text-orange-500 border-2 border-orange-500 h-[40px] self-center px-8">
                    MUA SẮM TOÀN BỘ SẢN PHẨM
                  </button>
                </div>{' '}
                <div className=" relative w-[1200px] h-fit bg-white flex flex-row flex-wrap content-center justify-between p-2">
                  {flashSaleProducts.map((p: FlashSaleProductModel) => (
                    <div className="self-center" key={p.id}>
                      <ProductCard flashSaleProduct={p} />
                    </div>
                  ))}
                </div>
              </div>
            </div>

            <div className=" relative w-[1200px] flex flex-col self-center pb-10 content-center align-baseline">
              <div className=" flex flex-row h-[38px] leading-[38px] content-center">
                <span className=" relative text-2xl py-3 self-center">Laz Mall</span>
                <a className=" ml-[auto] align-baseline justify-center content-center" href="">
                  <span className=" text-blue-500 font-medium self-center">Xem thêm &gt;</span>
                </a>
              </div>
              <div className=" relative w-[1200px] h-fit flex flex-row flex-wrap content-center justify-between p-2">
                {lazMalls.map((lazm: LazMallModel) => (
                  <div className="self-center" key={lazm.id}>
                    <LazMall lazMall={lazm} />
                  </div>
                ))}
              </div>
            </div>

            <div className=" relative w-[1200px] flex flex-col self-center pb-10 content-center align-baseline">
              <div className=" flex flex-row h-fit leading-[38px] content-center">
                <span className=" relative text-2xl py-3 self-center">Danh mục ngành hàng</span>
              </div>
              <div className=" relative w-full min-h-[300px] flex flex-row flex-wrap box-border">
                {productCategories.map((prc: ProductCategoryModel) => (
                  <div className="self-center" key={prc.id}>
                    <ProductCategory productCategory={prc} />
                  </div>
                ))}
              </div>
            </div>

            <div className="bg-blue-200 h-28 "></div>
          </div>
        </div>
      </main>
    </>
  )
}
